/*
# 2Ô∏è‚É£ Calculadora de partidas Rankeadas
**O Que deve ser utilizado**

- Vari√°veis
- Operadores
- La√ßos de repeti√ß√£o
- Estruturas de decis√µes
- Fun√ß√µes

## Objetivo:

Crie uma fun√ß√£o que recebe como par√¢metro a quantidade de vit√≥rias e derrotas de um jogador,
depois disso retorne o resultado para uma vari√°vel, o saldo de Rankeadas deve ser feito atrav√©s
do calculo (vit√≥rias - derrotas)

Se vit√≥rias for menor do que 10 = Ferro
Se vit√≥rias for entre 11 e 20 = Bronze
Se vit√≥rias for entre 21 e 50 = Prata
Se vit√≥rias for entre 51 e 80 = Ouro
Se vit√≥rias for entre 81 e 90 = Diamante
Se vit√≥rias for entre 91 e 100= Lend√°rio
Se vit√≥rias for maior ou igual a 101 = Imortal

## Sa√≠da

Ao final deve se exibir uma mensagem:
"O jogador tem de saldo de **{saldoVitorias}** est√° no n√≠vel de **{nivel}**"
   
Bons estudos üòâ
*/
//Inicializando o "readline" biblioteca utilizada para obter entradas do usu√°rio.
var readline = require('readline-sync');

//Fun√ß√£o para calcular o saldo ranqueado do jogador, recebe como par√¢metro o saldo de vitorias e derrotas.
function calcularSaldo(saldoVitorias, saldoDerrotas){
    return saldoVitorias - saldoDerrotas
}

//Fun√ß√£o para calcular o rank do jogador, recebe como par√¢metro o saldo ranqueado.
function calcularRank(saldoRanqueado){
    let nivel;
    //Utilizando uma estrutura condicional para verificar o n√≠vel do jogador
    if(saldoRanqueado <= 10){
        nivel = "Ferro";
        cont[0]++;//Incrementando o contador de vezes que caiu em cada n√≠vel
    }
    else
        if(saldoRanqueado <= 20){
            nivel = "Bronze";
            cont[1]++;
        }
    else
        if(saldoRanqueado <= 50){
            nivel = "Prata";
            cont[2]++;
        }
    else
        if(saldoRanqueado <= 80){
            nivel = "Ouro";
            cont[3]++;
        }
    else
        if(saldoRanqueado <= 90){
            nivel = "Diamante";
            cont[4]++;
        }
    else
        if(saldoRanqueado <= 100){
            nivel = "Lendario";
            cont[5]++;
        }
    else{
        nivel = "Imortal";
        cont[6]++;
    }
    return nivel;
}

//Fun√ß√£o que n√£o possui par√¢metro e nem retorno, apenas execulta a impress√£o do contador de ranks.
function imprimeContadorRanks(){
    let niveis = ["Ferro", "Bronze", "Prata", "Ouro", "Diamante", "Lend√°rio", "Imortal"];
    //Utilizando a estrutura de repeti√ß√£o "for" para percorrer os vetores contendo as informa√ß√µes de niveis e contador.
    for(let i = 0; i < 8; i++){
        console.log(niveis[i] + " = " + cont[i]);
    }
}

//Criando as vari√°veis necess√°rias.
let nome;
let quantidadeVitorias;
let quantidadeDerrotas;
let saldoRanqueadas;
let nivel;
let opcao;
var cont = [0, 0, 0, 0, 0, 0, 0];

//Criando um la√ßo de repeti√ß√£o "while" que se encerra quando a op√ß√£o do usu√°rio for 3.
while(opcao != 3){
    //Informando as op√ß√µes e armazenando a op√ß√£o do usu√°rio na vari√°vel "opcao".
    console.log("Sendo as op√ß√µes:\n1 - Verificar rank do jogador\n2 - Contar quantos jogadores j√° foram verificados em cada n√≠vel\n3 - Parar execu√ß√£o");
    opcao = parseInt(readline.question("Selecione sua opcao: "));
    //Iniciando uma estrutura de decis√£o baseada na vari√°vel "opcao".
    switch(opcao){
        case 1:
            //Recebendo as informa√ß√µes do jogador
            nome = readline.question("Digite o nome do jogador: ");
            quantidadeVitorias = parseInt(readline.question("Digite a quantidade de vit√≥rias: "));
            quantidadeDerrotas = parseInt(readline.question("Digite a quantidade de derrotas: "));
            saldoRanqueadas = calcularSaldo(quantidadeVitorias, quantidadeDerrotas);
            nivel = calcularRank(saldoRanqueadas);
            console.log("O jogador de nome " + nome + " possui um saldo de " + saldoRanqueadas + " com isso seu rank √© " + nivel);
            break;
        case 2:
            console.log("A quantidade de jogadores verificados em cada n√≠vel foi:");
            imprimeContadorRanks();
            break;
        case 3:
            console.log("Encerrando execu√ß√£o!!!");
            break;
        default:
            console.log("Op√ß√£o inv√°lida!!!");
            break;
    }
}
